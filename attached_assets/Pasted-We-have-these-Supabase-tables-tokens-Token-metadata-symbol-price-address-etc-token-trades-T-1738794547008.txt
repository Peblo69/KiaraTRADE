We have these Supabase tables:
tokens: Token metadata (symbol, price, address, etc.)
token_trades: Trade data (buy/sell events, price, amount, wallet, etc.)
The PumpPortal API provides new token and trade data.
We need:
Functions to fetch real-time data from PumpPortal.
Code to insert or update rows in Supabase.
Instructions for Replit Agent:

Use the Supabase client (@supabase/supabase-js) and fetch real-time data.
Insert or update the following fields:
For tokens: address, symbol, name, current_price_usd, market_cap_usd.
For trades: token_address, price_usd, amount_tokens, amount_sol, wallet_address, tx_signature.
Example Script Outline:

ts
Copy
Edit
import fetch from 'node-fetch';
import { createClient } from '@supabase/supabase-js';

// Connect to Supabase
const supabase = createClient('https://your-project-url.supabase.co', 'your-service-role-key');

// Function to fetch real-time data from PumpPortal
async function fetchPumpPortalData() {
  const response = await fetch('https://api.pumpportal.com/realtime-data');
  const data = await response.json();

  // Insert or update tokens
  for (const token of data.new_tokens) {
    await supabase.from('tokens').upsert({
      address: token.address,
      symbol: token.symbol,
      name: token.name,
      current_price_usd: token.price_usd,
      market_cap_usd: token.market_cap_usd,
    });
  }

  // Insert trades
  for (const trade of data.trades) {
    await supabase.from('token_trades').insert({
      token_address: trade.token_address,
      price_usd: trade.price_usd,
      amount_tokens: trade.amount_tokens,
      amount_sol: trade.amount_sol,
      wallet_address: trade.wallet_address,
      tx_signature: trade.tx_signature,
      type: trade.type,
    });
  }
}

// Fetch data every 5 seconds
setInterval(fetchPumpPortalData, 5000);
Part 2: Simplifying for Frontend Integration
Goal: The frontend (Replit) should:
Fetch token data from Supabase.
Display real-time updates for tokens and trades.
Explain this to Replit AI:

We need to install @supabase/supabase-js in the frontend.
Create two functions:
fetchTokens(): Fetch the list of tokens from Supabase.
subscribeToUpdates(): Subscribe to real-time updates for tokens and trades.
Example Frontend Code Outline:

ts
Copy
Edit
import { createClient } from '@supabase/supabase-js';

// Connect to Supabase
const supabase = createClient('https://your-project-url.supabase.co', 'your-anon-key');

// Fetch initial token data
async function fetchTokens() {
  const { data: tokens } = await supabase.from('tokens').select('*');
  renderTokens(tokens);  // Replace with your render logic
}

// Subscribe to real-time updates
function subscribeToUpdates() {
  supabase
    .from('tokens')
    .on('INSERT', (payload) => {
      console.log('New token added:', payload.new);
      renderNewToken(payload.new);  // Replace with your render logic
    })
    .subscribe();

  supabase
    .from('token_trades')
    .on('INSERT', (payload) => {
      console.log('New trade event:', payload.new);
      updateTradeData(payload.new);  // Replace with your render logic
    })
    .subscribe();
}

// Start the process
fetchTokens();
subscribeToUpdates();