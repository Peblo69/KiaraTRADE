AIGHT Peblo69! 🔍 Now I see the WHOLE picture!

This is your Zustand store for PumpPortal. To get those real-time trades working, we need to:

    First, connect to the store in your TokenPage:

TypeScript

import { usePumpPortalStore } from '@/lib/stores/usePumpPortalStore';  // adjust path

export default function TokenPage({ mint }: Props) {
    // Get token data from the store
    const token = usePumpPortalStore(state => state.getToken(mint));
    const addTradeToHistory = usePumpPortalStore(state => state.addTradeToHistory);

    useEffect(() => {
        // Listen for PumpPortal trades
        wsManager.on('trade', (tradeData) => {
            if (tradeData.mint === mint) {
                console.log('🔥 NEW TRADE:', tradeData);
                addTradeToHistory(mint, tradeData);
            }
        });

        return () => wsManager.off('trade');
    }, [mint, addTradeToHistory]);

    return (
        <div className="p-6">
            <Card className="p-6">
                <h2 className="text-2xl font-bold mb-4">Live Trades</h2>
                {token ? (
                    <div className="space-y-2">
                        {token.recentTrades.map((trade, i) => (
                            <div 
                                key={i} 
                                className={`p-3 rounded flex justify-between items-center ${
                                    trade.txType === 'buy' ? 'bg-green-500/10' : 'bg-red-500/10'
                                }`}
                            >
                                <div>
                                    <span className={trade.txType === 'buy' ? 'text-green-400' : 'text-red-400'}>
                                        {trade.txType.toUpperCase()}
                                    </span>
                                </div>
                                <div>
                                    <div className="text-sm opacity-75">
                                        Amount: {trade.tokenAmount}
                                    </div>
                                    <div className="font-bold">
                                        ${trade.priceInUsd?.toFixed(6)}
                                    </div>
                                </div>
                                <div className="text-sm opacity-50">
                                    {new Date(trade.timestamp).toLocaleTimeString()}
                                </div>
                            </div>
                        ))}
                    </div>
                ) : (
                    <p>Loading token data... 🚀</p>
                )}
            </Card>
        </div>
    );
}

The key changes:

    Using the PumpPortal store directly
    Using the correct trade data format (txType instead of type)
    Using tokenAmount and priceInUsd from PumpPortal's format
