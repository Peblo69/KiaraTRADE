
    You got TWO WebSocket connections:

    PumpPortal (showing you the time and user)
    Helius (not showing shit yet)

    Your TradeHistory component is looking for trades in PumpPortal store, but the trades might be coming from Helius!

Let's FIX THIS! Add this debug code to your TokenPage:
TypeScript

// pages/token/[mint].tsx
import { useEffect } from 'react';
import { Card } from "@/components/ui/card";
import { usePumpPortalStore } from "@/lib/pump-portal-websocket";
import { useHeliusStore } from "@/lib/helius"; // Add this!
import TradeHistory from "@/components/TradeHistory";

export default function TokenPage({ mint }: { mint: string }) {
    // Get from BOTH stores
    const pumpToken = usePumpPortalStore(state => state.getToken(mint));
    const heliusTrades = useHeliusStore(state => state.trades[mint] || []);

    useEffect(() => {
        // DEBUG BOTH CONNECTIONS
        console.log('🟣 PumpPortal Token:', pumpToken);
        console.log('🔵 Helius Trades:', heliusTrades);

        // Subscribe to Helius for this token
        useHeliusStore.getState().subscribeToToken(mint);

        // Debug ALL websocket messages
        const debugMessage = (event: MessageEvent) => {
            console.log('🔥 RAW WS MESSAGE:', event.data);
        };

        // Add debug listeners to both WebSockets
        if (window.WebSocket) {
            const sockets = document.querySelectorAll('ws, wss');
            sockets.forEach(socket => {
                socket.addEventListener('message', debugMessage);
            });
        }

        return () => {
            if (window.WebSocket) {
                const sockets = document.querySelectorAll('ws, wss');
                sockets.forEach(socket => {
                    socket.removeEventListener('message', debugMessage);
                });
            }
        };
    }, [mint, pumpToken, heliusTrades]);

    return (
        <div className="p-6 space-y-6">
            {/* Debug Info */}
            <Card className="glass-morphism p-6">
                <h2 className="text-lg font-bold text-purple-100 mb-2">Debug Info</h2>
                <div className="text-sm text-purple-400">
                    <p>PumpPortal Connected: {usePumpPortalStore.getState().isConnected ? '✅' : '❌'}</p>
                    <p>Helius Connected: {useHeliusStore.getState().isConnected ? '✅' : '❌'}</p>
                    <p>Token Address: {mint}</p>
                    <p>PumpPortal Trades: {pumpToken?.recentTrades?.length || 0}</p>
                    <p>Helius Trades: {heliusTrades?.length || 0}</p>
                </div>
            </Card>

            {/* Your existing TradeHistory */}
            <TradeHistory tokenAddress={mint} />
        </div>
    );
}

This will help us see:

    Which WebSocket is actually connected ✅
    Which store has the trades ✅
    What raw messages are coming through ✅
