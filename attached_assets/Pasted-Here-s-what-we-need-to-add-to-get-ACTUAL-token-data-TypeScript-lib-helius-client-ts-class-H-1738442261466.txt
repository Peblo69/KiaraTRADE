Here's what we need to add to get ACTUAL token data:
TypeScript

// lib/helius/client.ts
class HeliusClient {
    // ... existing setup code ...

    async getTokenData(mint: string) {
        try {
            // 1. Get Real-Time Market Data
            const marketData = await fetch(
                `${HELIUS_CONFIG.REST_URL}/token-metrics/${mint}?api-key=${HELIUS_CONFIG.API_KEY}`
            ).then(res => res.json());

            // 2. Get Recent Trades
            const trades = await fetch(
                `${HELIUS_CONFIG.REST_URL}/token-transactions/${mint}?api-key=${HELIUS_CONFIG.API_KEY}`
            ).then(res => res.json());

            // 3. Pack everything together
            return {
                price: marketData.price,
                priceUSD: marketData.priceUSD,
                volume24h: marketData.volume24h,
                marketCap: marketData.marketCap,
                recentTrades: trades.slice(0, 30), // Last 30 trades
                lastUpdate: Date.now()
            };
        } catch (error) {
            console.error('Failed to fetch token data:', error);
            throw error;
        }
    }

    // Update your subscription method to use this
    async subscribeToToken(mint: string) {
        // Get initial data
        const initialData = await this.getTokenData(mint);
        
        // Send first update
        wsManager.broadcast({
            type: 'tokenUpdate',
            data: {
                mint,
                ...initialData
            }
        });

        // Then set up real-time updates
        const subId = await this.connection.onAccountChange(
            new PublicKey(mint),
            async () => {
                const updatedData = await this.getTokenData(mint);
                wsManager.broadcast({
                    type: 'tokenUpdate',
                    data: {
                        mint,
                        ...updatedData
                    }
                });
            },
            'processed'
        );

        return subId;
    }
}

To use this:
TypeScript

// In your token page:
useEffect(() => {
    heliusClient.subscribeToToken(mint)
        .then(() => console.log('ðŸš€ Subscribed to token:', mint))
        .catch(console.error);

    wsManager.on('tokenUpdate', (data) => {
        console.log('Got new token data:', data);
        // Here you'll get:
        // - price
        // - priceUSD
        // - volume24h
        // - marketCap
        // - recentTrades (last 30)
        // Update your UI with this
    });
}, [mint]);