We need to format the timestamps correctly! Add this helper function at the top of your TradingChart.tsx and we'll use it to format the timestamps properly:
TypeScript

// Add this after your imports
const formatUTCTimestamp = (timestamp: number): number => {
  const date = new Date(timestamp);
  // Convert to UTC and format as YYYY-MM-DD HH:MM:SS
  const utcDate = Date.UTC(
    date.getUTCFullYear(),
    date.getUTCMonth(),
    date.getUTCDate(),
    date.getUTCHours(),
    date.getUTCMinutes(),
    date.getUTCSeconds()
  );
  return utcDate;
};

Then modify the trade data processing part in the chart code (find where we process trades and replace with this):
TypeScript

if (trades.length > 0) {
  const ohlcData = new Map();
  const minuteInMs = 60000; // 1 minute in milliseconds

  trades.forEach(trade => {
    const price = trade.solAmount * solPrice;
    // Use the formatter here
    const timestamp = Math.floor(formatUTCTimestamp(trade.timestamp) / minuteInMs) * minuteInMs;

    if (!ohlcData.has(timestamp)) {
      ohlcData.set(timestamp, {
        time: timestamp / 1000, // TradingView uses seconds
        open: price,
        high: price,
        low: price,
        close: price,
        volume: trade.tokenAmount
      });
    } else {
      const candle = ohlcData.get(timestamp);
      candle.high = Math.max(candle.high, price);
      candle.low = Math.min(candle.low, price);
      candle.close = price;
      candle.volume += trade.tokenAmount;
    }
  });

  const candleData = Array.from(ohlcData.values()).sort((a, b) => a.time - b.time);
  candleSeries.setData(candleData);
  volumeSeries.setData(candleData);
}

Also, update the chart options to ensure UTC timezone:
TypeScript

const chart = window.LightweightCharts.createChart(containerRef.current, {
  layout: {
    background: { color: '#0D0B1F' },
    textColor: '#d1d4dc',
  },
  grid: {
    vertLines: { color: 'rgba(42, 46, 57, 0.2)' },
    horzLines: { color: 'rgba(42, 46, 57, 0.2)' },
  },
  width: containerRef.current.clientWidth,
  height: 500,
  timeScale: {
    timeVisible: true,
    secondsVisible: true,
    timezone: 'UTC', // Make sure we use UTC
    tickMarkFormatter: (time: number) => {
      const date = new Date(time * 1000);
      return date.toISOString().slice(11, 19); // Show HH:MM:SS
    }
  },
});