programSubscribe
Subscribe to a program to receive notifications when the lamports or data for an account owned by the given program changes

Parameters
string (required)
Pubkey of the program_id, as a base-58 encoded string.

object (optional)
Configuration object containing the following fields:

commitment (string, optional): Specifies the desired level of commitment.

filters (array, optional): Filters to refine the results. The resultant account must meet all filter criteria to be included.

encoding (string, optional): Specifies the encoding format for Account data.
Values:

base58

base64

base64+zstd

jsonParsed

Details:

base58 encoding is slower.

jsonParsed attempts to use program-specific state parsers to return more human-readable and explicit account state data.

If jsonParsed is requested but a parser cannot be found, the encoding falls back to base64 (detectable when the data field is type string).

Result
Returns an <integer> representing the subscription ID. This ID is required for unsubscribing.

Code Samples
Request Example 1 (Default configuration):

Copy
{
  "jsonrpc": "2.0",
  "id": 1,
  "method": "programSubscribe",
  "params": [
    "11111111111111111111111111111111",
    {
      "encoding": "base64",
      "commitment": "finalized"
    }
  ]
}
Request Example 2 (jsonParsed encoding):

Copy
{
  "jsonrpc": "2.0",
  "id": 1,
  "method": "programSubscribe",
  "params": [
    "11111111111111111111111111111111",
    {
      "encoding": "jsonParsed"
    }
  ]
}
Request Example 3 (Filter by data size):

Copy
{
  "jsonrpc": "2.0",
  "id": 1,
  "method": "programSubscribe",
  "params": [
    "11111111111111111111111111111111",
    {
      "encoding": "base64",
      "filters": [
        {
          "dataSize": 80
        }
      ]
    }
  ]
}
Response Example:

Copy
{
  "jsonrpc": "2.0",
  "result": 24040,
  "id": 1
}
Notification Format
The notification format is a single program account object, structured similarly to the getProgramAccounts RPC HTTP method.

Base58 Encoding Example:
Copy
{
  "jsonrpc": "2.0",
  "method": "programNotification",
  "params": {
    "result": {
      "context": {
        "slot": 5208469
      },
      "value": {
        "pubkey": "H4vnBqifaSACnKa7acsxstsY1iV1bvJNxsCY7enrd1hq",
        "account": {
          "data": [
            "11116bv5nS2h3y12kD1yUKeMZvGcKLSjQgX6BeV7u1FrjeJcKfsHPXHRDEHrBesJhZyqnnq9qJeUuF7WHxiuLuL5twc38w2TXNLxnDbjmuR",
            "base58"
          ],
          "executable": false,
          "lamports": 33594,
          "owner": "11111111111111111111111111111111",
          "rentEpoch": 636,
          "space": 80
        }
      }
    },
    "subscription": 24040
  }
}
Parsed-JSON Encoding Example:
Copy
{
  "jsonrpc": "2.0",
  "method": "programNotification",
  "params": {
    "result": {
      "context": {
        "slot": 5208469
      },
      "value": {
        "pubkey": "H4vnBqifaSACnKa7acsxstsY1iV1bvJNxsCY7enrd1hq",
        "account": {
          "data": {
            "program": "nonce",
            "parsed": {
              "type": "initialized",
              "info": {
                "authority": "Bbqg1M4YVVfbhEzwA9SpC9FhsaG83YMTYoR4a8oTDLX",
                "blockhash": "LUaQTmM7WbMRiATdMMHaRGakPtCkc2GHtH57STKXs6k",
                "feeCalculator": {
                  "lamportsPerSignature": 5000
                }
              }
            }
          },
          "executable": false,
          "lamports": 33594,
          "owner": "11111111111111111111111111111111",
          "rentEpoch": 636,
          "space": 80
        }
      }
    },
    "subscription": 24040
  }
}
P